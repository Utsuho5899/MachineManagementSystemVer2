// <auto-generated />
using System;
using MachineManagementSystemVer2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachineManagementSystemVer2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916025608_InitialCreateWithCompleteSeedData")]
    partial class InitialCreateWithCompleteSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CaseComments")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CaseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CaseComments");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RepairCaseId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RepairCaseId");

                    b.ToTable("CaseHistories");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CasePhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("PhotoData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PhotoId");

                    b.HasIndex("CaseId");

                    b.ToTable("CasePhotos");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CustomerTaxId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerAddress = "台南市新市區",
                            CustomerName = "T公司",
                            CustomerPhone = "06-111-2222",
                            CustomerTaxId = "12345678"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerAddress = "台北市",
                            CustomerName = "發哥",
                            CustomerPhone = "06-111-2233",
                            CustomerTaxId = "11223344"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("ProductionLine")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Remark")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DeviceId");

                    b.HasIndex("PlantId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            DeviceId = 1,
                            DeviceModel = "NXE3400",
                            PlantId = 1,
                            ProductionLine = "H1#1",
                            SerialNumber = "20240901-001"
                        },
                        new
                        {
                            DeviceId = 2,
                            DeviceModel = "NXE3400",
                            PlantId = 2,
                            ProductionLine = "N1#1",
                            SerialNumber = "20240901-002"
                        },
                        new
                        {
                            DeviceId = 3,
                            DeviceModel = "ASM9000",
                            PlantId = 3,
                            ProductionLine = "RC1#1",
                            SerialNumber = "20240901-010"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeePhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("EmployeeTitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Account = "user1",
                            EmergencyContact = "王媽媽",
                            EmergencyPhone = "0987654321",
                            EmployeeAddress = "屏東市xxxxxxxxx",
                            EmployeeName = "王小明",
                            EmployeePhone = "0912345678",
                            EmployeeTitle = "現場工程師",
                            HireDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "Engineer",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Account = "manager1",
                            EmergencyContact = "李妻",
                            EmergencyPhone = "03-1234567",
                            EmployeeAddress = "新竹市xxxxxx",
                            EmployeeName = "李主管",
                            EmployeePhone = "0952368741",
                            EmployeeTitle = "業務經理",
                            HireDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "Manager",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Account = "user2",
                            EmergencyContact = "陳媽媽",
                            EmergencyPhone = "0987654321",
                            EmployeeAddress = "高雄市xxxxxxxxx",
                            EmployeeName = "陳大華",
                            EmployeePhone = "0919874585",
                            EmployeeTitle = "現場工程師",
                            HireDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "Engineer",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Account = "manager2",
                            EmergencyContact = "張嬸",
                            EmergencyPhone = "0987612587",
                            EmployeeAddress = "苗栗市xxxxxxxxx",
                            EmployeeName = "張經理",
                            EmployeePhone = "0987258678",
                            EmployeeTitle = "工程部經理",
                            HireDate = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "Manager",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Account = "admin",
                            EmergencyContact = "工程師",
                            EmergencyPhone = "0987612587",
                            EmployeeAddress = "高雄市xxxxxxxxx",
                            EmployeeName = "系統管理員",
                            EmployeePhone = "0987888888",
                            EmployeeTitle = "系統管理員",
                            HireDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "Admin",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Account = "abc",
                            EmergencyContact = "母",
                            EmergencyPhone = "0933333333",
                            EmployeeAddress = "高雄市",
                            EmployeeName = "LJB",
                            EmployeePhone = "0911111111",
                            EmployeeTitle = "系統管理員",
                            HireDate = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = "Admin",
                            Status = "在職"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Account = "hr_user",
                            EmergencyContact = "人資測試",
                            EmergencyPhone = "0925856324",
                            EmployeeAddress = "高雄市oooooooo",
                            EmployeeName = "林人資",
                            EmployeePhone = "0912365852",
                            EmployeeTitle = "人資",
                            HireDate = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password",
                            Role = "HR",
                            Status = "在職"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PlantAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlantCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlantPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("PlantId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            CustomerId = 1,
                            PlantAddress = "新竹市xoxox",
                            PlantCode = "H1",
                            PlantName = "新竹廠",
                            PlantPhone = "03-1224545"
                        },
                        new
                        {
                            PlantId = 2,
                            CustomerId = 1,
                            PlantAddress = "台南市xoxox",
                            PlantCode = "N1",
                            PlantName = "台南廠",
                            PlantPhone = "06-6548452"
                        },
                        new
                        {
                            PlantId = 3,
                            CustomerId = 2,
                            PlantAddress = "新竹縣xoxox",
                            PlantCode = "RC1",
                            PlantName = "竹科研發中心",
                            PlantPhone = "03-2116555"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.Property<int>("RepairCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairCaseId"));

                    b.Property<string>("CaseRemark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CaseStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerContact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RepairCaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PlantId");

                    b.ToTable("RepairCases");

                    b.HasData(
                        new
                        {
                            RepairCaseId = 1,
                            CaseStatus = "OPEN",
                            Description = "客戶反應光刻機曝光後晶圓良率降低，需要檢查光源模組",
                            DeviceId = 1,
                            EmployeeId = 1,
                            OccurredAt = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlantId = 1,
                            Title = "光刻機光源模組檢查"
                        },
                        new
                        {
                            RepairCaseId = 2,
                            CaseStatus = "暫置",
                            Description = "蝕刻腔體真空無法維持，懷疑是真空幫浦老化",
                            DeviceId = 2,
                            EmployeeId = 2,
                            OccurredAt = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlantId = 2,
                            Title = "蝕刻腔體真空度異常"
                        },
                        new
                        {
                            RepairCaseId = 3,
                            CaseStatus = "CLOSE",
                            Description = "自動測試程式頻繁跳出錯誤代碼，需要檢查控制模組",
                            DeviceId = 3,
                            EmployeeId = 3,
                            OccurredAt = new DateTime(2024, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlantId = 3,
                            Title = "自動測試程式錯誤"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseComment", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany("CaseComments")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseHistory", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany("CaseHistories")
                        .HasForeignKey("RepairCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CasePhoto", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany("CasePhotos")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Plant", "Plant")
                        .WithMany("Devices")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Plant", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Customer", "Customer")
                        .WithMany("Plants")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Customer", null)
                        .WithMany("RepairCases")
                        .HasForeignKey("CustomerId");

                    b.HasOne("MachineManagementSystemVer2.Models.Device", "Device")
                        .WithMany("RepairCases")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Employee", "Employee")
                        .WithMany("RepairCases")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Plant", "Plant")
                        .WithMany("RepairCases")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Employee");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Customer", b =>
                {
                    b.Navigation("Plants");

                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Employee", b =>
                {
                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Plant", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.Navigation("CaseComments");

                    b.Navigation("CaseHistories");

                    b.Navigation("CasePhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
