// <auto-generated />
using System;
using MachineManagementSystemVer2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachineManagementSystemVer2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250905023800_FixRelations")]
    partial class FixRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CaseId");

                    b.HasIndex("PersonId");

                    b.ToTable("CaseComments");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChangedBy")
                        .HasColumnType("int");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HistoryId");

                    b.HasIndex("CaseId");

                    b.HasIndex("ChangedBy");

                    b.ToTable("CaseHistories");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CasePhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("PhotoData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PhotoId");

                    b.HasIndex("CaseId");

                    b.ToTable("CasePhotos");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "台南市新市區",
                            CompanyName = "T公司",
                            Phone = "06-111-2222",
                            TaxId = "12345678"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "台北市",
                            CompanyName = "發哥",
                            Phone = "06-111-2233",
                            TaxId = "11223344"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("ProductionLine")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Remark")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DeviceId");

                    b.HasIndex("PlantId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            DeviceId = 1,
                            Model = "NXE3400",
                            PlantId = 1,
                            ProductionLine = "H1#1",
                            SerialNumber = "20240901-001"
                        },
                        new
                        {
                            DeviceId = 2,
                            Model = "NXE3400",
                            PlantId = 2,
                            ProductionLine = "N1#1",
                            SerialNumber = "20240901-002"
                        },
                        new
                        {
                            DeviceId = 3,
                            Model = "ASM9000",
                            PlantId = 3,
                            ProductionLine = "RC1#1",
                            SerialNumber = "20240901-010"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Address = "屏東市xxxxxxxxx",
                            EmergencyContact = "王媽媽",
                            EmergencyPhone = "0987654321",
                            HireDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "王小明",
                            Phone = "0912345678",
                            Title = "現場工程師"
                        },
                        new
                        {
                            PersonId = 2,
                            Address = "新竹市xxxxxx",
                            EmergencyContact = "李妻",
                            EmergencyPhone = "03-1234567",
                            HireDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "李主管",
                            Phone = "0952368741",
                            Title = "業務經理"
                        },
                        new
                        {
                            PersonId = 3,
                            Address = "高雄市xxxxxxxxx",
                            EmergencyContact = "陳媽媽",
                            EmergencyPhone = "0987654321",
                            HireDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "陳大華",
                            Phone = "0919874585",
                            Title = "現場工程師"
                        },
                        new
                        {
                            PersonId = 4,
                            Address = "苗栗市xxxxxxxxx",
                            EmergencyContact = "張嬸",
                            EmergencyPhone = "0987612587",
                            HireDate = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "張經理",
                            Phone = "0987258678",
                            Title = "工程部經理"
                        },
                        new
                        {
                            PersonId = 5,
                            Address = "高雄市xxxxxxxxx",
                            EmergencyContact = "工程師",
                            EmergencyPhone = "0987612587",
                            HireDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "系統管理員",
                            Phone = "0987888888",
                            Title = "系統管理員"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PlantId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            Address = "新竹市xoxox",
                            CustomerId = 1,
                            Phone = "03-1224545",
                            PlantCode = "H1",
                            PlantName = "新竹廠"
                        },
                        new
                        {
                            PlantId = 2,
                            Address = "台南市xoxox",
                            CustomerId = 1,
                            Phone = "06-6548452",
                            PlantCode = "N1",
                            PlantName = "台南廠"
                        },
                        new
                        {
                            PlantId = 3,
                            Address = "新竹縣xoxox",
                            CustomerId = 2,
                            Phone = "03-2116555",
                            PlantCode = "RC1",
                            PlantName = "竹科研發中心"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.Property<int>("RepairCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairCaseId"));

                    b.Property<string>("CustomerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepairCaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.ToTable("RepairCases");

                    b.HasData(
                        new
                        {
                            RepairCaseId = 1,
                            Description = "客戶反應光刻機曝光後晶圓良率降低，需要檢查光源模組",
                            DeviceId = 1,
                            OccurredAt = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            Status = "OPEN"
                        },
                        new
                        {
                            RepairCaseId = 2,
                            Description = "蝕刻腔體真空無法維持，懷疑是真空幫浦老化",
                            DeviceId = 2,
                            OccurredAt = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 2,
                            Status = "暫置"
                        },
                        new
                        {
                            RepairCaseId = 3,
                            Description = "自動測試程式頻繁跳出錯誤代碼，需要檢查控制模組",
                            DeviceId = 3,
                            OccurredAt = new DateTime(2024, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 3,
                            Status = "CLOSE"
                        });
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.SystemLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LogId");

                    b.HasIndex("PersonId");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseComment", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany("Comments")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CaseHistory", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("ChangedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.CasePhoto", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.RepairCase", "RepairCase")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairCase");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Plant", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Customer", "Customer")
                        .WithMany("Plants")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Customer", null)
                        .WithMany("RepairCases")
                        .HasForeignKey("CustomerId");

                    b.HasOne("MachineManagementSystemVer2.Models.Device", "Device")
                        .WithMany("RepairCases")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MachineManagementSystemVer2.Models.Person", null)
                        .WithMany("RepairCases")
                        .HasForeignKey("PersonId1");

                    b.Navigation("Device");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.SystemLog", b =>
                {
                    b.HasOne("MachineManagementSystemVer2.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Customer", b =>
                {
                    b.Navigation("Plants");

                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Device", b =>
                {
                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.Person", b =>
                {
                    b.Navigation("RepairCases");
                });

            modelBuilder.Entity("MachineManagementSystemVer2.Models.RepairCase", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
